// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idl/hermes.proto

package hermes

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScriptName           string   `protobuf:"bytes,2,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d7f1f7418435d4, []int{0}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderId) GetScriptName() string {
	if m != nil {
		return m.ScriptName
	}
	return ""
}

type Status struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d7f1f7418435d4, []int{1}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Status) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderId)(nil), "hermes.OrderId")
	proto.RegisterType((*Status)(nil), "hermes.Status")
}

func init() {
	proto.RegisterFile("idl/hermes.proto", fileDescriptor_75d7f1f7418435d4)
}

var fileDescriptor_75d7f1f7418435d4 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0xcb, 0x82, 0x40,
	0x10, 0x86, 0x3f, 0xfd, 0xc8, 0x68, 0x04, 0xab, 0x3d, 0x49, 0x97, 0xc4, 0x93, 0x27, 0x83, 0x82,
	0x0e, 0xdd, 0xc2, 0x2e, 0x11, 0x15, 0xe8, 0x0f, 0x90, 0xcd, 0x19, 0x70, 0x41, 0x77, 0x65, 0xdd,
	0xfe, 0x7f, 0xb0, 0x6b, 0xd0, 0x6d, 0xe6, 0x61, 0xe6, 0xe5, 0x79, 0x61, 0x25, 0xb0, 0xdb, 0xb5,
	0xa4, 0x7b, 0x1a, 0xf3, 0x41, 0x2b, 0xa3, 0x58, 0xe0, 0xb6, 0xf4, 0x04, 0xf3, 0xa7, 0x46, 0xd2,
	0x57, 0x64, 0x11, 0xf8, 0x02, 0x63, 0x2f, 0xf1, 0xb2, 0xff, 0xd2, 0x17, 0xc8, 0xb6, 0x10, 0x8e,
	0x8d, 0x16, 0x83, 0xa9, 0x25, 0xef, 0x29, 0xf6, 0x13, 0x2f, 0x5b, 0x94, 0xe0, 0xd0, 0x83, 0xf7,
	0x94, 0xde, 0x20, 0xa8, 0x0c, 0x37, 0xef, 0xd1, 0x9e, 0xda, 0xa9, 0x6e, 0x14, 0x92, 0xcd, 0x98,
	0x95, 0xe0, 0x50, 0xa1, 0x90, 0x58, 0x02, 0x21, 0x92, 0x7b, 0x15, 0x4a, 0x4e, 0x59, 0xbf, 0x68,
	0x7f, 0x01, 0xb8, 0x73, 0xd1, 0x55, 0x24, 0x91, 0x34, 0x3b, 0xc2, 0xda, 0x6a, 0x15, 0x5c, 0x36,
	0xd4, 0x9d, 0x4d, 0xd5, 0xaa, 0x81, 0x2d, 0xf3, 0xa9, 0xc2, 0x64, 0xbc, 0x89, 0xbe, 0xc0, 0x69,
	0xa4, 0x7f, 0xaf, 0xc0, 0xb6, 0x3b, 0x7c, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xfa, 0x00, 0x25,
	0xf1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MailSenderClient is the client API for MailSender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailSenderClient interface {
	OrderCancelAtShop(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Status, error)
}

type mailSenderClient struct {
	cc grpc.ClientConnInterface
}

func NewMailSenderClient(cc grpc.ClientConnInterface) MailSenderClient {
	return &mailSenderClient{cc}
}

func (c *mailSenderClient) OrderCancelAtShop(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/hermes.MailSender/OrderCancelAtShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailSenderServer is the server API for MailSender service.
type MailSenderServer interface {
	OrderCancelAtShop(context.Context, *OrderId) (*Status, error)
}

// UnimplementedMailSenderServer can be embedded to have forward compatible implementations.
type UnimplementedMailSenderServer struct {
}

func (*UnimplementedMailSenderServer) OrderCancelAtShop(ctx context.Context, req *OrderId) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCancelAtShop not implemented")
}

func RegisterMailSenderServer(s *grpc.Server, srv MailSenderServer) {
	s.RegisterService(&_MailSender_serviceDesc, srv)
}

func _MailSender_OrderCancelAtShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailSenderServer).OrderCancelAtShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hermes.MailSender/OrderCancelAtShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailSenderServer).OrderCancelAtShop(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hermes.MailSender",
	HandlerType: (*MailSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OrderCancelAtShop",
			Handler:    _MailSender_OrderCancelAtShop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "idl/hermes.proto",
}
